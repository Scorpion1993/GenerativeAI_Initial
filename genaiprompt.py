# -*- coding: utf-8 -*-
"""GenAIPrompt.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19D523bziMPlQHaqdIkDqer63L12FTS69
"""

from IPython.display import display,HTML
import ipywidgets as widgets

import google.generativeai as genai
from google.colab import userdata

# Assume genai is already configured with your API key and model is loaded
# For demonstration purposes, let's re-configure and load a model
try:
    GOOGLE_API_KEY = userdata.get('GOOGLE_API_KEY')
    genai.configure(api_key=GOOGLE_API_KEY)
    model = genai.GenerativeModel('gemini-1.5-flash-latest')
except Exception as e:
    print(f"Error configuring API or loading model: {e}")
    print("Please ensure your GOOGLE_API_KEY secret is set in Google Colab.")


# Create an HTML widget styled as a header
header = widgets.HTML(
    value="""
    <h1 style="
        color: white;
        background-color: #4CAF50;
        padding: 20px;
        text-align: center;
        border-radius: 10px;
        font-family: Arial, sans-serif;
    ">
        ðŸš€ Hey Jitendra!Welcome to the world of GenAI..
    </h1>
    """
)

display(header)

# Create a text area for the prompt
prompt_textbox = widgets.Textarea(
    value='',
    placeholder='Enter your prompt here...',
    description='Ask Anything',
    disabled=False,
    layout=widgets.Layout(width='auto', height='100px')
)

# Create a button to generate content
generate_button = widgets.Button(
    description='Submit',
    disabled=False,
    button_style='primary',
    tooltip='Click to generate content',
    icon='magic',
    layout=widgets.Layout(width='auto')
)

# Create an output widget to display the response
output_area = widgets.Output(layout=widgets.Layout(border='1px solid black', padding='10px'))

# Define the function to call when the button is clicked
def on_generate_button_clicked(b):
    with output_area:
        output_area.clear_output()
        prompt = prompt_textbox.value
        if prompt:
            try:
                print("Generating...")
                response = model.generate_content(prompt)
                print(response.text)
            except Exception as e:
                print(f"An error occurred: {e}")
        else:
            print("Please enter a prompt.")

# Link the button to the function
generate_button.on_click(on_generate_button_clicked)

# Display the widgets
display(prompt_textbox, generate_button, output_area)